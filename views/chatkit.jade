extends layout

block content
  .main
    .chat
      fieldset#first
        fieldset#second
          ul#message-list      
        form#message-form           
          input#message-text(type='text')      
          input#send(type='submit') 
      script(src='https://unpkg.com/@pusher/chatkit@0.7.5/dist/web/chatkit.js')  
      script.
        const tokenProvider = new Chatkit.TokenProvider({
          url: "https://us1.pusherplatform.io/services/chatkit_token_provider/v1/81941ebe-9108-491a-9404-a72023fce067/token"
        });
        const chatManager = new Chatkit.ChatManager({
          instanceLocator: "v1:us1:81941ebe-9108-491a-9404-a72023fce067",
          userId: "zed@zed.com",//need to get user email from passport.
          tokenProvider: tokenProvider
        });
        var randomUser;
        $.get('/users/randomUser').done(function(response) {
          randomUser = response;
          console.log(randomUser);

          chatManager.connect().then(currentUser => {
            currentUser.createRoom({
              name: 'foundChat',
              private: true,
               addUserIds:[currentUser.id, randomUser]
             }).then(room => {
              console.log(`Created room called ${room.name}`)
              currentUser.subscribeToRoom({
                roomId: room.id,
                hooks: {
                  onNewMessage: message => {
                    const ul = document.getElementById("message-list");
                    const li = document.createElement("li");
                    li.appendChild(
                      document.createTextNode(`${message.sender.name}: ${message.text}`)
                      );
                    ul.appendChild(li);
                  }
                }
              });
              const form = document.getElementById("message-form");
              form.addEventListener("submit", e => {
                e.preventDefault();
                const input = document.getElementById("message-text");
                currentUser.sendMessage({
                  text: input.value,
                  roomId: room.id
                });
                input.value = "";
              });
            })
             .catch(err => {
              console.log(`Error creating room ${err}`)
            })
          })//end of chatmanager.connect  
          .catch(error => {
            console.error("error:", error);
          });
        });
